---
import type { MarkdownHeading } from "astro";

import { AlignLeft } from "lucide-react";

type Props = {
  headings: MarkdownHeading[];
};

const { headings } = Astro.props;
---

{
  headings.length > 0 && (
    <nav class="toc">
      <div class="toc-header">
        <AlignLeft />
        <h2 class="toc-title">On this page</h2>
      </div>
      <ul class="toc-list">
        {headings.map((heading) => {
          if (heading.depth > 3) {
            return null;
          }

          return (
            <li class="toc-list-item" data-level={heading.depth}>
              <a href={`#${heading.slug}`}>{heading.text}</a>
            </li>
          );
        })}
      </ul>
    </nav>
  )
}

<style>
  .toc {
    .toc-header {
      align-items: center;
      display: flex;
      color: var(--wui-color-grey-11);
      gap: var(--wui-space-3);
      margin-bottom: var(--wui-space-5);

      .toc-title {
        font-size: var(--wui-font-size-2);
        font-weight: var(--wui-font-weight-normal);
      }

      & > svg {
        height: var(--wui-font-size-3);
        width: var(--wui-font-size-3);
      }
    }

    .toc-list {
      position: relative;
      padding-inline: var(--wui-space-6);

      &:before {
        background: var(--wui-color-grey-6);
        content: "";
        left: 0;
        height: 100%;
        position: absolute;
        top: 0;
        width: 1px;
      }

      .toc-list-item {
        align-items: center;
        display: flex;
        font-size: var(--wui-font-size-2);
        font-weight: var(--wui-font-weight-medium);
        height: calc(34px * var(--wui-scale));
        white-space: nowrap;

        &[data-level="3"] {
          padding-left: var(--wui-space-4);
        }

        a {
          color: var(--wui-color-grey-11);
        }

        &:hover {
          a {
            color: var(--wui-color-grey-12);
          }
        }
      }
    }
  }
</style>
